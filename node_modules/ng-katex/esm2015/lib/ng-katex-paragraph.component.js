/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { extractMath } from 'extract-math';
export class KatexParagraphComponent {
    /**
     * @return {?}
     */
    get segments() {
        return extractMath(this.paragraph);
    }
}
KatexParagraphComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng-katex-paragraph',
                template: `
    <p>
      <ng-container *ngFor="let segment of segments">
        <ng-katex
          *ngIf="segment.math else text"
          [equation]="segment.raw"
          [options]="{ displayMode: segment.type === 'display' }">
        </ng-katex>
        <ng-template #text>{{ segment.value }}</ng-template>
      </ng-container>
    </p>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
KatexParagraphComponent.propDecorators = {
    paragraph: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    KatexParagraphComponent.prototype.paragraph;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmcta2F0ZXgtcGFyYWdyYXBoLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWthdGV4LyIsInNvdXJjZXMiOlsibGliL25nLWthdGV4LXBhcmFncmFwaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFFLE9BQU8sRUFBRSxXQUFXLEVBQVcsTUFBTSxjQUFjLENBQUM7QUFrQnBELE1BQU0sT0FBTyx1QkFBdUI7Ozs7SUFHbEMsSUFBSSxRQUFRO1FBQ1YsT0FBTyxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7OztZQXJCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIsUUFBUSxFQUFFOzs7Ozs7Ozs7OztHQVdUO2dCQUNELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2FBQ2hEOzs7d0JBRUUsS0FBSzs7OztJQUFOLDRDQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBleHRyYWN0TWF0aCwgU2VnbWVudCB9IGZyb20gJ2V4dHJhY3QtbWF0aCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25nLWthdGV4LXBhcmFncmFwaCcsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHA+XG4gICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBzZWdtZW50IG9mIHNlZ21lbnRzXCI+XG4gICAgICAgIDxuZy1rYXRleFxuICAgICAgICAgICpuZ0lmPVwic2VnbWVudC5tYXRoIGVsc2UgdGV4dFwiXG4gICAgICAgICAgW2VxdWF0aW9uXT1cInNlZ21lbnQucmF3XCJcbiAgICAgICAgICBbb3B0aW9uc109XCJ7IGRpc3BsYXlNb2RlOiBzZWdtZW50LnR5cGUgPT09ICdkaXNwbGF5JyB9XCI+XG4gICAgICAgIDwvbmcta2F0ZXg+XG4gICAgICAgIDxuZy10ZW1wbGF0ZSAjdGV4dD57eyBzZWdtZW50LnZhbHVlIH19PC9uZy10ZW1wbGF0ZT5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgIDwvcD5cbiAgYCxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgS2F0ZXhQYXJhZ3JhcGhDb21wb25lbnQge1xuICBASW5wdXQoKSBwYXJhZ3JhcGg6IHN0cmluZztcblxuICBnZXQgc2VnbWVudHMgKCk6IFNlZ21lbnRbXSB7XG4gICAgcmV0dXJuIGV4dHJhY3RNYXRoKHRoaXMucGFyYWdyYXBoKTtcbiAgfVxufVxuIl19