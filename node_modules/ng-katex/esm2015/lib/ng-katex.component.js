/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, } from '@angular/core';
import * as ko from './ng-katex.options';
export class KatexComponent {
    constructor() {
        this.onError = new EventEmitter();
    }
    /**
     * @param {?} error
     * @return {?}
     */
    hasError(error) {
        this.onError.emit(error);
    }
}
KatexComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng-katex',
                template: `
    <span [katex]="equation"
          [katex-options]="options"
          (someEvent)="hasError($event)">
    </span>
  `
            }] }
];
KatexComponent.propDecorators = {
    equation: [{ type: Input }],
    options: [{ type: Input }],
    onError: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    KatexComponent.prototype.equation;
    /** @type {?} */
    KatexComponent.prototype.options;
    /** @type {?} */
    KatexComponent.prototype.onError;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmcta2F0ZXguY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmcta2F0ZXgvIiwic291cmNlcyI6WyJsaWIvbmcta2F0ZXguY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxHQUVQLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sS0FBSyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFXekMsTUFBTSxPQUFPLGNBQWM7SUFUM0I7UUFhWSxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQUs5QyxDQUFDOzs7OztJQUhDLFFBQVEsQ0FBQyxLQUFLO1FBQ1osSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQzs7O1lBakJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsVUFBVTtnQkFDcEIsUUFBUSxFQUFFOzs7OztHQUtUO2FBQ0Y7Ozt1QkFHRSxLQUFLO3NCQUNMLEtBQUs7c0JBQ0wsTUFBTTs7OztJQUZQLGtDQUEwQjs7SUFDMUIsaUNBQW1DOztJQUNuQyxpQ0FBNEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMga28gZnJvbSAnLi9uZy1rYXRleC5vcHRpb25zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmcta2F0ZXgnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxzcGFuIFtrYXRleF09XCJlcXVhdGlvblwiXG4gICAgICAgICAgW2thdGV4LW9wdGlvbnNdPVwib3B0aW9uc1wiXG4gICAgICAgICAgKHNvbWVFdmVudCk9XCJoYXNFcnJvcigkZXZlbnQpXCI+XG4gICAgPC9zcGFuPlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBLYXRleENvbXBvbmVudCB7XG5cbiAgQElucHV0KCkgZXF1YXRpb246IHN0cmluZztcbiAgQElucHV0KCkgb3B0aW9ucz86IGtvLkthdGV4T3B0aW9ucztcbiAgQE91dHB1dCgpIG9uRXJyb3IgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBoYXNFcnJvcihlcnJvcikge1xuICAgIHRoaXMub25FcnJvci5lbWl0KGVycm9yKTtcbiAgfVxufVxuIl19