{"version":3,"file":"ng-katex.js","sources":["ng://ng-katex/lib/ng-katex.component.ts","ng://ng-katex/lib/ng-katex-paragraph.component.ts","ng://ng-katex/lib/ng-katex.service.ts","ng://ng-katex/lib/ng-katex.directive.ts","ng://ng-katex/lib/ng-katex-html.component.ts","ng://ng-katex/lib/ng-katex.module.ts"],"sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport * as ko from './ng-katex.options';\n\n@Component({\n  selector: 'ng-katex',\n  template: `\n    <span [katex]=\"equation\"\n          [katex-options]=\"options\"\n          (someEvent)=\"hasError($event)\">\n    </span>\n  `,\n})\nexport class KatexComponent {\n\n  @Input() equation: string;\n  @Input() options?: ko.KatexOptions;\n  @Output() onError = new EventEmitter<any>();\n\n  hasError(error) {\n    this.onError.emit(error);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { extractMath, Segment } from 'extract-math';\n\n@Component({\n  selector: 'ng-katex-paragraph',\n  template: `\n    <p>\n      <ng-container *ngFor=\"let segment of segments\">\n        <ng-katex\n          *ngIf=\"segment.math else text\"\n          [equation]=\"segment.raw\"\n          [options]=\"{ displayMode: segment.type === 'display' }\">\n        </ng-katex>\n        <ng-template #text>{{ segment.value }}</ng-template>\n      </ng-container>\n    </p>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class KatexParagraphComponent {\n  @Input() paragraph: string;\n\n  get segments (): Segment[] {\n    return extractMath(this.paragraph);\n  }\n}\n","import { ElementRef, Injectable } from '@angular/core';\nimport * as ko from './ng-katex.options';\n\nimport * as katex from 'katex';\n\n@Injectable()\nexport class KatexService {\n\n  render(equation: string, element: ElementRef, options?: ko.KatexOptions) {\n    return katex.render(equation, element.nativeElement, options);\n  }\n\n  renderToString(equation: string, options?: ko.KatexOptions): string {\n    return katex.renderToString(equation, options);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { KatexService } from './ng-katex.service';\nimport * as ko from './ng-katex.options';\n\n@Directive({\n  selector: '[katex]',\n})\nexport class KatexDirective {\n\n  @Input('katex') equation: string;\n  @Input('katex-options') options: ko.KatexOptions;\n\n  @Output() onError = new EventEmitter<any>();\n\n  constructor(private el: ElementRef,\n              private katexService: KatexService) {}\n\n  ngOnChanges() {\n    try {\n      this.katexService.render(this.equation, this.el, this.options);\n    } catch (e) {\n      this.onError.emit(e);\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { extractMath, Segment } from 'extract-math';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { KatexService } from './ng-katex.service';\n\n\n@Component({\n  selector: 'ng-katex-html',\n  template: `<span [innerHTML]=\"allHtml\"></span>`\n})\nexport class KatexHtmlComponent {\n  constructor(private domSanitizer: DomSanitizer, private katexService: KatexService) { }\n  @Input() html: string;\n\n  get allHtml(): SafeHtml {\n    let segments = this.segments;\n    var allHtml = segments.map((seg) => {\n      if (seg.math) {\n        return this.katexService.renderToString(seg.raw, { displayMode: seg.type === 'display' });\n      }\n      else {\n        return seg.value;\n      }\n    }).reduce((total, current) => {\n      return total += current;\n    });\n    return this.domSanitizer.bypassSecurityTrustHtml(allHtml);\n  }\n\n  get segments(): Segment[] {\n    return extractMath(this.html);\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { KatexService } from './ng-katex.service';\nimport { KatexDirective } from './ng-katex.directive';\nimport { KatexComponent } from './ng-katex.component';\nimport { KatexParagraphComponent } from './ng-katex-paragraph.component';\nimport { KatexHtmlComponent } from './ng-katex-html.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    KatexService,\n  ],\n  declarations: [\n    KatexDirective,\n    KatexComponent,\n    KatexParagraphComponent,\n    KatexHtmlComponent\n  ],\n  exports: [\n    KatexComponent,\n    KatexParagraphComponent,\n    KatexHtmlComponent\n  ],\n})\nexport class KatexModule {}\n"],"names":["katex.render","katex.renderToString"],"mappings":"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"}