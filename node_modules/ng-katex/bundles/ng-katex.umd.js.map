{"version":3,"file":"ng-katex.umd.js","sources":["ng://ng-katex/lib/ng-katex.component.ts","ng://ng-katex/lib/ng-katex-paragraph.component.ts","ng://ng-katex/lib/ng-katex.service.ts","ng://ng-katex/lib/ng-katex.directive.ts","ng://ng-katex/lib/ng-katex-html.component.ts","ng://ng-katex/lib/ng-katex.module.ts"],"sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport * as ko from './ng-katex.options';\n\n@Component({\n  selector: 'ng-katex',\n  template: `\n    <span [katex]=\"equation\"\n          [katex-options]=\"options\"\n          (someEvent)=\"hasError($event)\">\n    </span>\n  `,\n})\nexport class KatexComponent {\n\n  @Input() equation: string;\n  @Input() options?: ko.KatexOptions;\n  @Output() onError = new EventEmitter<any>();\n\n  hasError(error) {\n    this.onError.emit(error);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { extractMath, Segment } from 'extract-math';\n\n@Component({\n  selector: 'ng-katex-paragraph',\n  template: `\n    <p>\n      <ng-container *ngFor=\"let segment of segments\">\n        <ng-katex\n          *ngIf=\"segment.math else text\"\n          [equation]=\"segment.raw\"\n          [options]=\"{ displayMode: segment.type === 'display' }\">\n        </ng-katex>\n        <ng-template #text>{{ segment.value }}</ng-template>\n      </ng-container>\n    </p>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class KatexParagraphComponent {\n  @Input() paragraph: string;\n\n  get segments (): Segment[] {\n    return extractMath(this.paragraph);\n  }\n}\n","import { ElementRef, Injectable } from '@angular/core';\nimport * as ko from './ng-katex.options';\n\nimport * as katex from 'katex';\n\n@Injectable()\nexport class KatexService {\n\n  render(equation: string, element: ElementRef, options?: ko.KatexOptions) {\n    return katex.render(equation, element.nativeElement, options);\n  }\n\n  renderToString(equation: string, options?: ko.KatexOptions): string {\n    return katex.renderToString(equation, options);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { KatexService } from './ng-katex.service';\nimport * as ko from './ng-katex.options';\n\n@Directive({\n  selector: '[katex]',\n})\nexport class KatexDirective {\n\n  @Input('katex') equation: string;\n  @Input('katex-options') options: ko.KatexOptions;\n\n  @Output() onError = new EventEmitter<any>();\n\n  constructor(private el: ElementRef,\n              private katexService: KatexService) {}\n\n  ngOnChanges() {\n    try {\n      this.katexService.render(this.equation, this.el, this.options);\n    } catch (e) {\n      this.onError.emit(e);\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { extractMath, Segment } from 'extract-math';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { KatexService } from './ng-katex.service';\n\n\n@Component({\n  selector: 'ng-katex-html',\n  template: `<span [innerHTML]=\"allHtml\"></span>`\n})\nexport class KatexHtmlComponent {\n  constructor(private domSanitizer: DomSanitizer, private katexService: KatexService) { }\n  @Input() html: string;\n\n  get allHtml(): SafeHtml {\n    let segments = this.segments;\n    var allHtml = segments.map((seg) => {\n      if (seg.math) {\n        return this.katexService.renderToString(seg.raw, { displayMode: seg.type === 'display' });\n      }\n      else {\n        return seg.value;\n      }\n    }).reduce((total, current) => {\n      return total += current;\n    });\n    return this.domSanitizer.bypassSecurityTrustHtml(allHtml);\n  }\n\n  get segments(): Segment[] {\n    return extractMath(this.html);\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { KatexService } from './ng-katex.service';\nimport { KatexDirective } from './ng-katex.directive';\nimport { KatexComponent } from './ng-katex.component';\nimport { KatexParagraphComponent } from './ng-katex-paragraph.component';\nimport { KatexHtmlComponent } from './ng-katex-html.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    KatexService,\n  ],\n  declarations: [\n    KatexDirective,\n    KatexComponent,\n    KatexParagraphComponent,\n    KatexHtmlComponent\n  ],\n  exports: [\n    KatexComponent,\n    KatexParagraphComponent,\n    KatexHtmlComponent\n  ],\n})\nexport class KatexModule {}\n"],"names":["EventEmitter","Component","Input","Output","extractMath","ChangeDetectionStrategy","katex.render","katex.renderToString","Injectable","Directive","ElementRef","DomSanitizer","NgModule","CommonModule"],"mappings":"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"}