{"version":3,"file":"ng-katex.js","sources":["ng:/ng-katex/lib/ng-katex.component.ts","ng:/ng-katex/lib/ng-katex-paragraph.component.ts","ng:/ng-katex/lib/ng-katex.service.ts","ng:/ng-katex/lib/ng-katex.directive.ts","ng:/ng-katex/lib/ng-katex-html.component.ts","ng:/ng-katex/lib/ng-katex.module.ts"],"names":["katex.render","katex.renderToString"],"mappings":"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","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport * as ko from './ng-katex.options';\n\n@Component({\n  selector: 'ng-katex',\n  template: `\n    <span [katex]=\"equation\"\n          [katex-options]=\"options\"\n          (someEvent)=\"hasError($event)\">\n    </span>\n  `,\n})\nexport class KatexComponent {\n\n  @Input() equation: string;\n  @Input() options?: ko.KatexOptions;\n  @Output() onError = new EventEmitter<any>();\n\n  hasError(error) {\n    this.onError.emit(error);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { extractMath, Segment } from 'extract-math';\n\n@Component({\n  selector: 'ng-katex-paragraph',\n  template: `\n    <p>\n      <ng-container *ngFor=\"let segment of segments\">\n        <ng-katex\n          *ngIf=\"segment.math else text\"\n          [equation]=\"segment.raw\"\n          [options]=\"{ displayMode: segment.type === 'display' }\">\n        </ng-katex>\n        <ng-template #text>{{ segment.value }}</ng-template>\n      </ng-container>\n    </p>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class KatexParagraphComponent {\n  @Input() paragraph: string;\n\n  get segments (): Segment[] {\n    return extractMath(this.paragraph);\n  }\n}\n","import { ElementRef, Injectable } from '@angular/core';\nimport * as ko from './ng-katex.options';\n\nimport * as katex from 'katex';\n\n@Injectable()\nexport class KatexService {\n\n  render(equation: string, element: ElementRef, options?: ko.KatexOptions) {\n    return katex.render(equation, element.nativeElement, options);\n  }\n\n  renderToString(equation: string, options?: ko.KatexOptions): string {\n    return katex.renderToString(equation, options);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { KatexService } from './ng-katex.service';\nimport * as ko from './ng-katex.options';\n\n@Directive({\n  selector: '[katex]',\n})\nexport class KatexDirective {\n\n  @Input('katex') equation: string;\n  @Input('katex-options') options: ko.KatexOptions;\n\n  @Output() onError = new EventEmitter<any>();\n\n  constructor(private el: ElementRef,\n              private katexService: KatexService) {}\n\n  ngOnChanges() {\n    try {\n      this.katexService.render(this.equation, this.el, this.options);\n    } catch (e) {\n      this.onError.emit(e);\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { extractMath, Segment } from 'extract-math';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { KatexService } from './ng-katex.service';\n\n\n@Component({\n  selector: 'ng-katex-html',\n  template: `<span [innerHTML]=\"allHtml\"></span>`\n})\nexport class KatexHtmlComponent {\n  constructor(private domSanitizer: DomSanitizer, private katexService: KatexService) { }\n  @Input() html: string;\n\n  get allHtml(): SafeHtml {\n    let segments = this.segments;\n    var allHtml = segments.map((seg) => {\n      if (seg.math) {\n        return this.katexService.renderToString(seg.raw, { displayMode: seg.type === 'display' });\n      }\n      else {\n        return seg.value;\n      }\n    }).reduce((total, current) => {\n      return total += current;\n    });\n    return this.domSanitizer.bypassSecurityTrustHtml(allHtml);\n  }\n\n  get segments(): Segment[] {\n    return extractMath(this.html);\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { KatexService } from './ng-katex.service';\nimport { KatexDirective } from './ng-katex.directive';\nimport { KatexComponent } from './ng-katex.component';\nimport { KatexParagraphComponent } from './ng-katex-paragraph.component';\nimport { KatexHtmlComponent } from './ng-katex-html.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    KatexService,\n  ],\n  declarations: [\n    KatexDirective,\n    KatexComponent,\n    KatexParagraphComponent,\n    KatexHtmlComponent\n  ],\n  exports: [\n    KatexComponent,\n    KatexParagraphComponent,\n    KatexHtmlComponent\n  ],\n})\nexport class KatexModule {}\n"]}