/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, } from '@angular/core';
import * as ko from './ng-katex.options';
var KatexComponent = /** @class */ (function () {
    function KatexComponent() {
        this.onError = new EventEmitter();
    }
    /**
     * @param {?} error
     * @return {?}
     */
    KatexComponent.prototype.hasError = /**
     * @param {?} error
     * @return {?}
     */
    function (error) {
        this.onError.emit(error);
    };
    KatexComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ng-katex',
                    template: "\n    <span [katex]=\"equation\"\n          [katex-options]=\"options\"\n          (someEvent)=\"hasError($event)\">\n    </span>\n  "
                }] }
    ];
    KatexComponent.propDecorators = {
        equation: [{ type: Input }],
        options: [{ type: Input }],
        onError: [{ type: Output }]
    };
    return KatexComponent;
}());
export { KatexComponent };
if (false) {
    /** @type {?} */
    KatexComponent.prototype.equation;
    /** @type {?} */
    KatexComponent.prototype.options;
    /** @type {?} */
    KatexComponent.prototype.onError;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmcta2F0ZXguY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmcta2F0ZXgvIiwic291cmNlcyI6WyJsaWIvbmcta2F0ZXguY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxHQUVQLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sS0FBSyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFekM7SUFBQTtRQWFZLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0lBSzlDLENBQUM7Ozs7O0lBSEMsaUNBQVE7Ozs7SUFBUixVQUFTLEtBQUs7UUFDWixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQixDQUFDOztnQkFqQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxVQUFVO29CQUNwQixRQUFRLEVBQUUsdUlBS1Q7aUJBQ0Y7OzsyQkFHRSxLQUFLOzBCQUNMLEtBQUs7MEJBQ0wsTUFBTTs7SUFLVCxxQkFBQztDQUFBLEFBbEJELElBa0JDO1NBVFksY0FBYzs7O0lBRXpCLGtDQUEwQjs7SUFDMUIsaUNBQW1DOztJQUNuQyxpQ0FBNEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMga28gZnJvbSAnLi9uZy1rYXRleC5vcHRpb25zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmcta2F0ZXgnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxzcGFuIFtrYXRleF09XCJlcXVhdGlvblwiXG4gICAgICAgICAgW2thdGV4LW9wdGlvbnNdPVwib3B0aW9uc1wiXG4gICAgICAgICAgKHNvbWVFdmVudCk9XCJoYXNFcnJvcigkZXZlbnQpXCI+XG4gICAgPC9zcGFuPlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBLYXRleENvbXBvbmVudCB7XG5cbiAgQElucHV0KCkgZXF1YXRpb246IHN0cmluZztcbiAgQElucHV0KCkgb3B0aW9ucz86IGtvLkthdGV4T3B0aW9ucztcbiAgQE91dHB1dCgpIG9uRXJyb3IgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBoYXNFcnJvcihlcnJvcikge1xuICAgIHRoaXMub25FcnJvci5lbWl0KGVycm9yKTtcbiAgfVxufVxuIl19