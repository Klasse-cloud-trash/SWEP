/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { extractMath } from 'extract-math';
var KatexParagraphComponent = /** @class */ (function () {
    function KatexParagraphComponent() {
    }
    Object.defineProperty(KatexParagraphComponent.prototype, "segments", {
        get: /**
         * @return {?}
         */
        function () {
            return extractMath(this.paragraph);
        },
        enumerable: true,
        configurable: true
    });
    KatexParagraphComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ng-katex-paragraph',
                    template: "\n    <p>\n      <ng-container *ngFor=\"let segment of segments\">\n        <ng-katex\n          *ngIf=\"segment.math else text\"\n          [equation]=\"segment.raw\"\n          [options]=\"{ displayMode: segment.type === 'display' }\">\n        </ng-katex>\n        <ng-template #text>{{ segment.value }}</ng-template>\n      </ng-container>\n    </p>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    KatexParagraphComponent.propDecorators = {
        paragraph: [{ type: Input }]
    };
    return KatexParagraphComponent;
}());
export { KatexParagraphComponent };
if (false) {
    /** @type {?} */
    KatexParagraphComponent.prototype.paragraph;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmcta2F0ZXgtcGFyYWdyYXBoLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWthdGV4LyIsInNvdXJjZXMiOlsibGliL25nLWthdGV4LXBhcmFncmFwaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFFLE9BQU8sRUFBRSxXQUFXLEVBQVcsTUFBTSxjQUFjLENBQUM7QUFFcEQ7SUFBQTtJQXNCQSxDQUFDO0lBSEMsc0JBQUksNkNBQVE7Ozs7UUFBWjtZQUNFLE9BQU8sV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNyQyxDQUFDOzs7T0FBQTs7Z0JBckJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixRQUFRLEVBQUUsdVdBV1Q7b0JBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzs7NEJBRUUsS0FBSzs7SUFLUiw4QkFBQztDQUFBLEFBdEJELElBc0JDO1NBTlksdUJBQXVCOzs7SUFDbEMsNENBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGV4dHJhY3RNYXRoLCBTZWdtZW50IH0gZnJvbSAnZXh0cmFjdC1tYXRoJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmcta2F0ZXgtcGFyYWdyYXBoJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8cD5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IHNlZ21lbnQgb2Ygc2VnbWVudHNcIj5cbiAgICAgICAgPG5nLWthdGV4XG4gICAgICAgICAgKm5nSWY9XCJzZWdtZW50Lm1hdGggZWxzZSB0ZXh0XCJcbiAgICAgICAgICBbZXF1YXRpb25dPVwic2VnbWVudC5yYXdcIlxuICAgICAgICAgIFtvcHRpb25zXT1cInsgZGlzcGxheU1vZGU6IHNlZ21lbnQudHlwZSA9PT0gJ2Rpc3BsYXknIH1cIj5cbiAgICAgICAgPC9uZy1rYXRleD5cbiAgICAgICAgPG5nLXRlbXBsYXRlICN0ZXh0Pnt7IHNlZ21lbnQudmFsdWUgfX08L25nLXRlbXBsYXRlPlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9wPlxuICBgLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBLYXRleFBhcmFncmFwaENvbXBvbmVudCB7XG4gIEBJbnB1dCgpIHBhcmFncmFwaDogc3RyaW5nO1xuXG4gIGdldCBzZWdtZW50cyAoKTogU2VnbWVudFtdIHtcbiAgICByZXR1cm4gZXh0cmFjdE1hdGgodGhpcy5wYXJhZ3JhcGgpO1xuICB9XG59XG4iXX0=